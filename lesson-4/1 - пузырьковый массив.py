#Тело основной программы
def bubble():
    # Функция для генерации рандомных чисел
    from random import randint
    # Длина массива определяется числом n
    while True:
        n = input('Введите длину массива: ')
        try:
            n = int(n)
            break
        except:
            print('\nНеверный формат числа!')
    # countx подсчитывает какое число мы вводим в данный момент
    countx = 1
    # Объявляем список (массив) 
    mas = []
    menu =input(
    """ 
Написать числа самому:                1
Сгенерировать числа автоматически:    2  
    """)  
    # Цикл не закончится, пока не введем все числа
    if menu == '1':
        for i in range(n):
            while True:
                x = input(f'Введите число {countx}: ')
                try:
                    x = int(x)
                    break
                except:
                    print('\nНеверный формат числа!')
                    i = i-1
            mas.append(x)
            countx+=1  
    # Автоматическая генерация
    elif menu == '2':
        for i in range(n):
            mas.append(randint(1,99))
    # Если ввести неправильный код в меню - отбросит с предупреждением на начало программы
    else:
        print('\nНеверный код!')
        bubble()

    # Здесь отображается массив, который мы будем сортировать
    print(f'Сортируемый массив:     {mas}')
    # count будет подсчитывать, сколько раз пришлось произвести замену между числами
    count = 0
    # Для того чтобы выполнить сравнения всех чисел внутри списка, нам нужно запустить цикл столько раз, сколько и чисел в списке.
    # (В конце цикла каждое наибольшее обнаруженное число будет сдвигаться к концу списка).
    # Так как последнее оставшееся число в последний цикл всегда будет самым наименьшим из списка
    # (так как все остальные уже отсортированы), то для оптимизации мы запускаем цикл на один раз меньше.
    for run in range(n-1):
        # Для выполнения цикла мы ставим значение range(n-1) для того, чтобы не получить ситуацию, когда мы 
        # сравниваем последнее в списке число i с несуществующим числом i+1.
        # Для оптимизации программы мы добавляем в цикл приписку -run. 
        # После первого исполнения цикла в конце списка окажется наибольшее число из списка.
        # Таким образом, нам уже не обязательно делать сравнение с последним числом. 
        # Соответсвенно, после второго исполнения цикла нам не требуется проверять уже два последних числа в списке.
        # С началом каждого цикла мы будем проверять всё меньше и меньше чисел, если добавим в range -run.
        # Это будет уменьшать диапазон обращения к списку на необходимое значение
        for i in range(n-1-run):
            if mas[i] > mas[i+1]:
                count += 1
                mas[i], mas[i+1] = mas[i+1], mas[i]

    print(f'Отсортированный массив: {mas}\nЧисло замен: {count}')



#Меню для запуска программы
while True:
    next_step = input(
"""
Выберите задачу.
Алгоритм сортировки списка пузырьковым методом:    1
Выход:                                             Enter
"""
    )
    if not next_step:
        print("До свидания...")
        break
    elif next_step == "1":
        bubble()
    else:
        print("Повторите ввод...")