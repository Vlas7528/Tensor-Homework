# Объявляется о существовании квадратного уравнения стандартного вида "ax^2 + bx + c = 0"
# Пользователю предлагается ввести по очереди коэффициенты a, b и c 

print('Для решения квадратного уравнения вида ax^2 + bx + c = 0 введите коэффициенты')

# Используем тип данных decimal
from decimal import Decimal
# Для расчёта квадратных корней вызываем sqrt
from math import sqrt
# Для работы комплексных чисел используем модуль cmath
import cmath
while True:
    a = input('Введите коэффициент a -> ')
    try:
        a = Decimal(a)
        break
    except:
        print('Неверный формат числа')
while True:
    b = input('Введите коэффициент b -> ')
    try:
        b = Decimal(b)
        break
    except:
        print('Неверный формат числа')
while True:        
    c = input('Введите коэффициент c -> ')
    try:
        c = Decimal(c)
        break
    except:
        print('Неверный формат числа')

print (a, b, c)


# Для начала нам нужно определить дискриминант
a = Decimal(a)
b = Decimal(b)
c = Decimal(c)
D = Decimal(b**2 - 4*(a*c))

print ('D =',D)
# После определения дискриминанта, сравниваем его с нулём, чтобы понять сколько корней имеет данное квадратное уравнение
if D == 0:
    print('Дискриминант равен нулю, есть только один корень')
    x = Decimal( -b / (2*a))
    print (f'Корень найден: {x}\nРешение завершено.')
elif D > 0:
    print('Дискриминант больше нуля, есть два корня')
    x1 = (-b + Decimal(sqrt(D))) / (2 * a)
    x2 = (-b - Decimal(sqrt(D))) / (2 * a)
    print (f'Корни найдены: x1 = {x1} x2 = {x2}\nРешение завершено')
else:
    print('Дискриминант меньше нуля. Решение с использованием комплексных чисел')
    x1 = (float(-b) + cmath.sqrt(D)) / float(2 *a)
    x2 = (float(-b) - cmath.sqrt(D)) / float(2 *a)
    
    print (f'Корни найдены: x1 ={x1}, x2 ={x2}\nРешение завершено')


